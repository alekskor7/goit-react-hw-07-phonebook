{"version":3,"sources":["components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-reducer.js","redux/store/store.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","changeFilter","createAction","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","post","deleteContact","id","delete","contactsOperations","loading","createReducer","pending","fulfilled","rejected","items","payload","state","filter","error","console","log","combineReducers","store","configureStore","reducer","contacts","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","concat","logger","devTools","process","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","reset","onSubmit","preventDefault","map","alert","className","s","form","label","input","type","placeholder","pattern","title","onChange","required","button","ContactList","contactList","onClick","Filter","App","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87765a57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__1OOU5\",\"input\":\"Filter_input__2aBNb\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61c228e29dbcca0017c82397.mockapi.io/';\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get('/contacts');\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', { name, number });\r\n      return data;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${id}`);\r\n      return id;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './contacts-actions';\r\nimport contactsOperations from './contacts-operations';\r\n\r\nconst loading = createReducer(false, {\r\n  [contactsOperations.fetchContacts.pending]: () => true,\r\n  [contactsOperations.fetchContacts.fulfilled]: () => false,\r\n  [contactsOperations.fetchContacts.rejected]: () => false,\r\n  [contactsOperations.addContact.pending]: () => true,\r\n  [contactsOperations.addContact.fulfilled]: () => false,\r\n  [contactsOperations.addContact.rejected]: () => false,\r\n  [contactsOperations.deleteContact.pending]: () => true,\r\n  [contactsOperations.deleteContact.fulfilled]: () => false,\r\n  [contactsOperations.deleteContact.rejected]: () => false,\r\n});\r\n\r\nconst items = createReducer([], {\r\n  [contactsOperations.fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [contactsOperations.addContact.fulfilled]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n  [contactsOperations.deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [contactsOperations.fetchContacts.rejected]: error => console.log(error),\r\n  [contactsOperations.fetchContacts.pending]: () => null,\r\n  [contactsOperations.addContact.rejected]: error => console.log(error),\r\n  [contactsOperations.addContact.pending]: () => null,\r\n  [contactsOperations.deleteContact.rejected]: error => console.log(error),\r\n  [contactsOperations.deleteContact.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  loading,\r\n  items,\r\n  filter,\r\n  error,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from '../contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({ serializableCheck: false }).concat(logger),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","export const getLoading = state => state.contacts.loading;\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};","import { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport s from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    contacts.map(contact => contact.name).includes(name)\r\n      ? alert(`${name} is already in contacts.`)\r\n      : dispatch(contactsOperations.addContact({ name, number }));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          placeholder=\"type name\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          placeholder=\"999-99-99\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\r\nimport contactsOperations from '../../redux/contacts/contacts-operations';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {contacts.map(contact => (\r\n        <li key={contact.id} className={s.contact}>\r\n      <p className={s.name}>{`${contact.name}`}</p>\r\n      <p className={s.number}>{`${contact.number}`}</p>\r\n      <button\r\n        className={s.button}\r\n        onClick={() => onDeleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n      ))}\r\n    </ul>\r\n    \r\n  );\r\n}","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form}>\r\n        <label>\r\n          <h3>Find contacts by name:</h3>\r\n          <input\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={e => dispatch(changeFilter(e.target.value))}\r\n            className={s.input}\r\n          />\r\n        </label>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\n// export default connect(null, mapDispatchToProps)(Filter);","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsOperations from './redux/contacts/contacts-operations';\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport Filter from \"./components/Filter/Filter\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store/store\";\r\nimport './index.css';\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3SlJ9\",\"label\":\"ContactForm_label__3lkmw\",\"input\":\"ContactForm_input__-pLW4\",\"button\":\"ContactForm_button__1d9SJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1zeVP\",\"contact\":\"ContactList_contact__2r3AZ\",\"name\":\"ContactList_name__1JGoi\",\"number\":\"ContactList_number__2p7k9\",\"button\":\"ContactList_button__VIvY1\"};"],"sourceRoot":""}